<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://www.bea.com/wli/sb/pipeline/config" xmlns:con1="http://www.bea.com/wli/sb/stages/config" xmlns:con2="http://www.bea.com/wli/sb/stages/transform/config">
  <ser:coreEntry isProxy="true" isEnabled="true">
    <ser:binding type="SOAP" isSoap12="false" xsi:type="con:SoapBindingType" xmlns:con="http://www.bea.com/wli/sb/services/bindings/config">
      <con:wsdl ref="TrainingDay2/Resources/WSDLs/MathMultiplePortTypeBndPort"/>
      <con:port>
        <con:name>MathMultiplePortTypeBndPort</con:name>
        <con:namespace>http://esb.quadras.co.id/MathMultiple/</con:namespace>
      </con:port>
      <con:selector type="SOAP action"/>
    </ser:binding>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
    <ser:ws-policy>
      <ser:binding-mode>wsdl-policy-attachments</ser:binding-mode>
    </ser:ws-policy>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>http</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:URI>
      <env:value>/TrainingDay2/ProxyServices/Chapter2_MathMultiple_PS</env:value>
    </tran:URI>
    <tran:inbound-properties/>
    <tran:all-headers>false</tran:all-headers>
    <tran:provider-specific>
      <http:inbound-properties/>
    </tran:provider-specific>
  </ser:endpointConfig>
  <ser:router errorHandler="_onErrorHandler-1083879019689652492--307f7d14.161b677498d.-7a13">
    <con:pipeline type="request" name="PipelinePairNode1_request">
      <con:stage name="PrintInputToConsole">
        <con:context>
          <con1:varNsDecl namespace="http://esb.quadras.co.id/MathMultiple/input_MathMultiple/" prefix="inp"/>
        </con:context>
        <con:actions>
          <con2:javaCallout varName="" xmlns:con3="http://www.bea.com/wli/sb/pipeline/config">
            <con1:id>_ActionId-4523940642413307627-1f76d04c.161b8b36db4.-7f1f</con1:id>
            <con2:archive ref="TrainingDay2/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Input Body : ',fn:normalize-space(fn-bea:serialize($body)))</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con1:assign varName="firstNumber" xmlns:con1="http://www.bea.com/wli/sb/stages/transform/config">
            <con3:id xmlns:con3="http://www.bea.com/wli/sb/stages/config">_ActionId-1083879019689652492--307f7d14.161b677498d.-79a1</con3:id>
            <con1:expr>
              <con3:xqueryText xmlns:con3="http://www.bea.com/wli/sb/stages/config">$body/inp:inputMathMultiple/Input/FirstNumber/text()</con3:xqueryText>
            </con1:expr>
          </con1:assign>
          <con1:assign varName="secondNumber" xmlns:con1="http://www.bea.com/wli/sb/stages/transform/config">
            <con3:id xmlns:con3="http://www.bea.com/wli/sb/stages/config">_ActionId-1083879019689652492--307f7d14.161b677498d.-79a0</con3:id>
            <con1:expr>
              <con3:xqueryText xmlns:con3="http://www.bea.com/wli/sb/stages/config">$body/inp:inputMathMultiple/Input/SecondNumber/text()</con3:xqueryText>
            </con1:expr>
          </con1:assign>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7980</con1:id>
            <con2:archive ref="TrainingDay2/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('First Number : ',$firstNumber)</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-797f</con1:id>
            <con2:archive ref="TrainingDay2/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Second Number : ',$secondNumber)</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
        </con:actions>
      </con:stage>
      <con:stage name="ValidateInput">
        <con:context/>
        <con:actions>
          <con2:assign varName="missingMandatoryField">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-760b</con1:id>
            <con2:expr>
              <con1:xqueryText>if(fn:string-length(fn-bea:trim($firstNumber))=0) then
	 'firstNumber'
else if(fn:string-length(fn-bea:trim($secondNumber))=0) then
	 'secondNumber'
else
	''</con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7584</con1:id>
            <con2:archive ref="TrainingDay2/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Missing Mandatory Field : ',$missingMandatoryField)</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con2:ifThenElse>
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-75f7</con1:id>
            <con2:case>
              <con2:condition>
                <con1:xqueryText>fn:string-length($missingMandatoryField)>0</con1:xqueryText>
              </con2:condition>
              <con2:actions>
                <con2:Error>
                  <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-75d8</con1:id>
                  <con2:errCode>999</con2:errCode>
                  <con2:message>Missing mandatory field</con2:message>
                </con2:Error>
              </con2:actions>
            </con2:case>
            <con2:default/>
          </con2:ifThenElse>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode1_response">
      <con:stage name="ConstructOutput">
        <con:context>
          <con1:userNsDecl namespace="http://esb.bca.com/MathMultiple/outputMathMultiple/" prefix="out"/>
        </con:context>
        <con:actions>
          <con2:javaCallout varName="">
            <con1:id>_ActionId-4523940642413307627-1f76d04c.161b8b36db4.-7efb</con1:id>
            <con2:archive ref="TrainingDay2/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Result : ',$result)</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con2:assign varName="newBody">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7909</con1:id>
            <con2:expr>
              <con1:xqueryText><![CDATA[<out:outputMathMultiple>
	<Output>
    	<ErrorSchema>
        	<ErrorCode>000</ErrorCode>
        	<ErrorMessage>Success</ErrorMessage>
    	</ErrorSchema>
    	<OutputSchema>
    		<Result>{$result}</Result>
    	</OutputSchema>
   	</Output>
</out:outputMathMultiple>]]></con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:replace varName="body" contents-only="true">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7908</con1:id>
            <con2:location>
              <con1:xpathText>.</con1:xpathText>
            </con2:location>
            <con2:expr>
              <con1:xqueryText>$newBody</con1:xqueryText>
            </con2:expr>
          </con2:replace>
          <con2:javaCallout varName="" xmlns:con3="http://www.bea.com/wli/sb/pipeline/config">
            <con1:id>_ActionId-4523940642413307627-1f76d04c.161b8b36db4.-7ef7</con1:id>
            <con2:archive ref="TrainingDay2/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Output Body : ',fn:normalize-space(fn-bea:serialize($body)))</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con1:reply>
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7907</con1:id>
          </con1:reply>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="error" name="_onErrorHandler-1083879019689652492--307f7d14.161b677498d.-7a13">
      <con:stage name="ConstructOutputError">
        <con:context>
          <con1:userNsDecl namespace="http://esb.bca.com/MathMultiple/outputMathMultiple/" prefix="out"/>
        </con:context>
        <con:actions>
          <con2:assign varName="newBody">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7626</con1:id>
            <con2:expr>
              <con1:xqueryText><![CDATA[<out:outputMathMultiple>
	<Output>
    	<ErrorSchema>
        	<ErrorCode>000</ErrorCode>
        	<ErrorMessage>Success</ErrorMessage>
    	</ErrorSchema>
    	<OutputSchema>
    		<Result>{$result}</Result>
    	</OutputSchema>
   	</Output>
</out:outputMathMultiple>]]></con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:replace varName="body" contents-only="true">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7625</con1:id>
            <con2:location>
              <con1:xpathText>.</con1:xpathText>
            </con2:location>
            <con2:expr>
              <con1:xqueryText>$newBody</con1:xqueryText>
            </con2:expr>
          </con2:replace>
          <con2:javaCallout varName="" xmlns:con3="http://www.bea.com/wli/sb/pipeline/config">
            <con1:id>_ActionId-4523940642413307627-1f76d04c.161b8b36db4.-7f01</con1:id>
            <con2:archive ref="TrainingDay2/Resources/JARs/SimpleLogging"/>
            <con2:className>id.co.quadras.training.WriteToConsole</con2:className>
            <con2:method>public static void println(java.lang.String, java.lang.String)</con2:method>
            <con2:expr>
              <con1:xqueryText>'DEBUG'</con1:xqueryText>
            </con2:expr>
            <con2:expr>
              <con1:xqueryText>concat('Output Body : ',fn:normalize-space(fn-bea:serialize($body)))</con1:xqueryText>
            </con2:expr>
          </con2:javaCallout>
          <con1:reply>
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7624</con1:id>
          </con1:reply>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="request" name="PipelinePairNodeAdd_request">
      <con:stage name="AddStage">
        <con:context/>
        <con:actions>
          <con2:assign varName="result">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-785e</con1:id>
            <con2:expr>
              <con1:xqueryText>xs:int($firstNumber) + xs:int($secondNumber)</con1:xqueryText>
            </con2:expr>
          </con2:assign>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNodeAdd_response"/>
    <con:pipeline type="request" name="PipelinePairNodeSubstract_request">
      <con:stage name="SubstractStage">
        <con:context/>
        <con:actions>
          <con2:assign varName="result">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-77ef</con1:id>
            <con2:expr>
              <con1:xqueryText>xs:int($firstNumber) - xs:int($secondNumber)</con1:xqueryText>
            </con2:expr>
          </con2:assign>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNodeSubstract_response"/>
    <con:pipeline type="request" name="PipelinePairNodeMultiply_request">
      <con:stage name="MultiplyStage">
        <con:context/>
        <con:actions>
          <con2:assign varName="result">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7780</con1:id>
            <con2:expr>
              <con1:xqueryText>xs:int($firstNumber) * xs:int($secondNumber)</con1:xqueryText>
            </con2:expr>
          </con2:assign>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNodeMultiply_response"/>
    <con:pipeline type="request" name="PipelinePairNodeDivide_request">
      <con:stage name="DivideStage">
        <con:context/>
        <con:actions>
          <con2:assign varName="result">
            <con1:id>_ActionId-1083879019689652492--307f7d14.161b677498d.-7711</con1:id>
            <con2:expr>
              <con1:xqueryText>xs:double($firstNumber) div xs:double($secondNumber)</con1:xqueryText>
            </con2:expr>
          </con2:assign>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNodeDivide_response"/>
    <con:flow>
      <con:pipeline-node name="PipelinePairNode1">
        <con:request>PipelinePairNode1_request</con:request>
        <con:response>PipelinePairNode1_response</con:response>
      </con:pipeline-node>
      <con:branch-node type="operation" name="BranchNode1">
        <con:context/>
        <con:branch-table>
          <con:branch name="Add">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="PipelinePairNodeAdd">
                <con:request>PipelinePairNodeAdd_request</con:request>
                <con:response>PipelinePairNodeAdd_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:branch name="Substract">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="PipelinePairNodeSubstract">
                <con:request>PipelinePairNodeSubstract_request</con:request>
                <con:response>PipelinePairNodeSubstract_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:branch name="Multiply">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="PipelinePairNodeMultiply">
                <con:request>PipelinePairNodeMultiply_request</con:request>
                <con:response>PipelinePairNodeMultiply_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:branch name="Divide">
            <con:operator>equals</con:operator>
            <con:value/>
            <con:flow>
              <con:pipeline-node name="PipelinePairNodeDivide">
                <con:request>PipelinePairNodeDivide_request</con:request>
                <con:response>PipelinePairNodeDivide_response</con:response>
              </con:pipeline-node>
            </con:flow>
          </con:branch>
          <con:default-branch>
            <con:flow/>
          </con:default-branch>
        </con:branch-table>
      </con:branch-node>
    </con:flow>
  </ser:router>
</xml-fragment>